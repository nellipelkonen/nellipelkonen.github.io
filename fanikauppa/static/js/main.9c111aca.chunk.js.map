{"version":3,"sources":["Products.js","Product.jsx","ProductCarousel.jsx","ShoppingCart.jsx","OrderDetails.jsx","App.js","reportWebVitals.js","index.js"],"names":["products","img","title","price","description","category","id","Product","props","class","className","src","product","onClick","addToShoppingCart","useState","React","ProductCarousel","productIndex","setProductIndex","removeFromShoppingCart","length","ShoppingCart","totalPrice","amount","map","clearShoppingCart","setOrderDetailsOpen","OrderDetails","selectedView","setSelectedView","inputName","setInputName","inputEmail","setInputEmail","inputPhoneNumber","setInputPhoneNumber","inputAddress","setInputAddress","inputCity","setInputCity","inputPostcode","setInputPostcode","onSubmit","event","preventDefault","type","value","placeholder","onChange","target","required","App","shoppingCart","setShoppingCart","orderDetailsOpen","copyOfShoppingCart","productInShoppingCart","find","p","undefined","push","productToBeRemoved","cartCopy","indexToRemove","findIndex","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c111aca.chunk.js","sourcesContent":["export const products = [\r\n    {   \r\n        img: 'https://media.discordapp.net/attachments/145653278414340096/903223783278641192/libbis.png',\r\n        title: 'libbis',        \r\n        price: 15,\r\n        description: 'an awesome cap',\r\n        category: 'hats',\r\n        id: 0,        \r\n    },\r\n\r\n    {   \r\n        img: 'https://cdn.discordapp.com/attachments/742797632413630566/935885995759505488/mugi.png',\r\n        title: 'mugi',        \r\n        price: 5,\r\n        description: 'a very lovely mug',\r\n        category: 'accessories',\r\n        id: 1,        \r\n    },\r\n\r\n    {   \r\n        img: 'https://media.discordapp.net/attachments/145653278414340096/903223772352479252/baita.png',\r\n        title: 'baita',        \r\n        price: 25,\r\n        description: 'a very fancy shirt',\r\n        category: 'shirts',\r\n        id: 2,        \r\n    },    \r\n]","export const Product = (props) => {\r\n    return (\r\n        <div class='productparent'>\r\n            <div className='product'>\r\n                <img src={props.product.img} />\r\n                <div className='text'>\r\n                    <div className='product-top'>\r\n                        <span className='title'>Item name: {props.product.title}</span>\r\n                        <span><u>Price: {props.product.price}</u></span>\r\n                    </div>\r\n                    <p>Description: {props.product.description}</p>\r\n                    <p>Category: {props.product.category}</p>\r\n                    <div class='btngroup'>\r\n                        <button onClick={() => {\r\n                            props.addToShoppingCart(props.product)\r\n                        }}>Add to cart</button>                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Product } from './Product';\r\nconst { useState } = React;\r\n\r\nexport const ProductCarousel = (props) => {\r\n    const [productIndex, setProductIndex] = useState(0);\r\n    return (\r\n        <div class='carouselparent'>\r\n            <div className='carousel'>\r\n                <Product\r\n                    product={props.products[productIndex]}\r\n                    addToShoppingCart={props.addToShoppingCart}\r\n                    removeFromShoppingCart={props.removeFromShoppingCart}\r\n                />\r\n                <button onClick={() => {\r\n                    if (productIndex === 0) {\r\n                        setProductIndex(props.products.length - 1)\r\n                    } else {\r\n                        setProductIndex(productIndex - 1)\r\n                    }\r\n                }}>←</button>\r\n                <button onClick={() => {\r\n                    if (productIndex === props.products.length - 1) {\r\n                        setProductIndex(0)\r\n                    } else {\r\n                        setProductIndex(productIndex + 1);\r\n                    }\r\n                }}>→</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n// cart_copy = copy of shoppingCart\r\n// index_to_remove = find index of productToRemove\r\n// remove Index_to_remove from cart_copy\r\n// update state","import React from 'react';\r\n\r\nexport const ShoppingCart = (props) => {\r\n\r\n    let totalPrice = 0;\r\n    for (const price of props.products) {\r\n        totalPrice += price.price * price.amount;\r\n    }    \r\n\r\n    return (\r\n        <div class='cartparent'>\r\n            <div class='shoppingcart'>\r\n                <h3>Shopping cart</h3>\r\n                    {props.products.map(product => (\r\n                        <p class='cartitem'>\r\n                            <span class='itemname'>{product.title}</span><img src={product.img}/><span class='itemamount'>{product.amount}kpl</span><span class='itemprice'>{product.price}€</span> \r\n\r\n                                <span id='cartbutton'>\r\n                                <button onClick={() => {\r\n                                    props.addToShoppingCart(product)\r\n                                }}>+</button>\r\n                                <button onClick={() => {\r\n                                    props.removeFromShoppingCart(product) \r\n                                }}>-</button>\r\n                                </span>\r\n                        </p>\r\n                    ))}\r\n                <p><u>Total price: {totalPrice}</u></p>\r\n                <button onClick={() => {    \r\n                    props.clearShoppingCart(props.product)\r\n                }}>Clear shopping cart</button>\r\n                <button onClick={() => {\r\n                    if(totalPrice <= 0){\r\n                        return;\r\n                    }else{\r\n                        props.setOrderDetailsOpen(true);\r\n                    }\r\n                }}>Checkout</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { products } from './Products';\r\nconst { useState } = React;\r\n\r\nexport const OrderDetails = (props) => {\r\n    const [selectedView, setSelectedView] = useState('orderDetails');\r\n    const [inputName, setInputName] = useState('');\r\n    const [inputEmail, setInputEmail] = useState('');\r\n    const [inputPhoneNumber, setInputPhoneNumber] = useState('');\r\n    const [inputAddress, setInputAddress] = useState('');\r\n    const [inputCity, setInputCity] = useState('');\r\n    const [inputPostcode, setInputPostcode] = useState('');\r\n\r\n    let totalPrice = 0;\r\n    for (const price of props.products) {\r\n        totalPrice += price.price * price.amount;\r\n    } \r\n\r\n    if (selectedView === 'orderDetails') {\r\n        return (\r\n            <div class='formparent'>\r\n                <div class='form'>\r\n                    <form onSubmit={(event) => {\r\n                        event.preventDefault()\r\n                        setSelectedView('');                        \r\n                    }}>\r\n                        <h3>Shipping details</h3>\r\n                        <div class='formitems'>\r\n                            <label>Name:\r\n                                <input type=\"text\" \r\n                                value={inputName} \r\n                                placeholder='Name'\r\n                                onChange={event => setInputName(event.target.value)}\r\n                                required\r\n                                /><br></br>\r\n                            </label>\r\n                            <label>Email:\r\n                                <input type=\"email\" \r\n                                value={inputEmail}\r\n                                placeholder='Email address'\r\n                                onChange={event => setInputEmail(event.target.value)}\r\n                                required\r\n                                /><br></br>\r\n                            </label>\r\n                            <label>Phone number:\r\n                                <input type=\"tel\"\r\n                                value={inputPhoneNumber}\r\n                                placeholder='Phone number'\r\n                                onChange={event => setInputPhoneNumber(event.target.value)}\r\n                                required\r\n                                /><br></br>\r\n                            </label>\r\n                            <label>Address:\r\n                                <input type=\"text\" \r\n                                value={inputAddress} \r\n                                placeholder='Address'\r\n                                onChange={event => setInputAddress(event.target.value)}\r\n                                required\r\n                                /><br></br>\r\n                            </label>\r\n                            <label>City:\r\n                                <input type=\"text\" \r\n                                value={inputCity} \r\n                                placeholder='City'\r\n                                onChange={event => setInputCity(event.target.value)} \r\n                                required\r\n                                /><br></br>\r\n                            </label>\r\n                            <label>Postcode:\r\n                                <input type=\"number\" \r\n                                value={inputPostcode} \r\n                                placeholder='Postcode'\r\n                                onChange={event => setInputPostcode(event.target.value)}\r\n                                required\r\n                                /><br></br>\r\n                            </label>\r\n                            <input type=\"submit\" value=\"Confirm order\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n    return (\r\n        <div class='summaryparent'>\r\n            <div class='ordersummary'>\r\n                <h1>Order summary:</h1>\r\n                    {props.products.map(product => (\r\n                        <div class='summary'>\r\n                            <span class='juu'>{product.title}</span>\r\n                            <img src={product.img}/>\r\n                            <span>{product.price}€</span>\r\n                            <span>{product.amount}kpl</span>                            \r\n                        </div>\r\n                    ))}\r\n                <span class='enkeksienää'><b>Total price: </b>{totalPrice}€</span>\r\n                <span class='enkeksienää'><b>Delivery address: </b>{inputAddress}</span>\r\n                <h2>Thank you for your order!</h2>\r\n                <button onClick={() => {    \r\n                    props.clearShoppingCart(products);\r\n                    props.setOrderDetailsOpen(false);\r\n                }}>Back to the store</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}}","import './App.css';\r\nimport { products } from './Products';\r\nimport { ProductCarousel } from './ProductCarousel';\r\nimport { ShoppingCart } from './ShoppingCart';\r\nimport { OrderDetails } from './OrderDetails';\r\n\r\nimport React from 'react';\r\nconst { useState } = React;\r\n\r\nfunction App() {\r\n  const [shoppingCart, setShoppingCart] = useState([])\r\n  const [orderDetailsOpen, setOrderDetailsOpen] = useState(false);\r\n  \r\n  const removeFromShoppingCart = (productToBeRemoved) => {\r\n    const cartCopy = [...shoppingCart];\r\n    const indexToRemove = shoppingCart.findIndex(product => {\r\n      return product.id === productToBeRemoved.id;\r\n    });\r\n\r\n    if (indexToRemove === -1) {\r\n      return;\r\n    }\r\n\r\n    const product = cartCopy[indexToRemove];\r\n\r\n    if (product.amount === 1) {\r\n      cartCopy.splice(indexToRemove, 1);\r\n    } else {\r\n      product.amount--;\r\n    }\r\n\r\n    setShoppingCart(cartCopy);\r\n  }\r\n\r\n  const clearShoppingCart = (products => {\r\n    setShoppingCart([]);\r\n      return;\r\n  })\r\n\r\n  const addToShoppingCart = (product) => {\r\n    const copyOfShoppingCart = [...shoppingCart];\r\n  \r\n    let productInShoppingCart = copyOfShoppingCart.find(p => p.id === product.id);\r\n  \r\n    if (productInShoppingCart === undefined) {\r\n      productInShoppingCart = { ...product, amount: 0 };\r\n  \r\n      copyOfShoppingCart.push(productInShoppingCart);\r\n    }\r\n    \r\n    productInShoppingCart.amount++;\r\n  \r\n    setShoppingCart(copyOfShoppingCart);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!orderDetailsOpen && (\r\n      <ProductCarousel\r\n        products={products}\r\n        addToShoppingCart={addToShoppingCart}\r\n      />\r\n      )}\r\n      {!orderDetailsOpen && (\r\n      <ShoppingCart\r\n        products={shoppingCart}\r\n        clearShoppingCart={clearShoppingCart}\r\n        removeFromShoppingCart={removeFromShoppingCart}\r\n        addToShoppingCart={addToShoppingCart}\r\n        setOrderDetailsOpen={setOrderDetailsOpen}\r\n      />\r\n      )}\r\n      {orderDetailsOpen && (\r\n        <OrderDetails\r\n            products={shoppingCart}\r\n            clearShoppingCart={clearShoppingCart}\r\n            setOrderDetailsOpen={setOrderDetailsOpen}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}